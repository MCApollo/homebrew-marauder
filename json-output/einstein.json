{
    "name": "Einstein",
    "description": "Remake of the old DOS game Sherlock",
    "url": "https://web.archive.org/web/20120621005109/games.flowix.com/files/einstein/einstein-2.0-src.tar.gz",
    "mirror": null,
    "homepage": "https://web.archive.org/web/20120621005109/games.flowix.com/en/index.html",
    "depends": [
        {
            "depend": "sdl",
            "build-depend": false
        },
        {
            "depend": "sdl_mixer",
            "build-depend": false
        },
        {
            "depend": "sdl_ttf",
            "build-depend": false
        }
    ],
    "resource": [],
    "conflicts": [],
    "patches": [
        {
            "url": null,
            "strip": "0"
        },
        {
            "url": null,
            "data": [
                "--- formatter.cpp\n",
                "+++ formatter.cpp\n",
                "@@ -58,7 +58,7 @@ Formatter::Formatter(unsigned char *data, int offset)\n",
                "             if ((c.type == INT_ARG) || (c.type == STRING_ARG) ||\n",
                "                     (c.type == FLOAT_ARG) || (c.type == DOUBLE_ARG))\n",
                "             {\n",
                "-                int no = (int)c.data;\n",
                "+                int no = *((int*)(&c.data));\n",
                "                 args[no - 1] = c.type;\n",
                "             }\n",
                "         }\n",
                "@@ -135,7 +135,7 @@ std::wstring Formatter::format(std::vector<ArgValue*> &argValues) const\n",
                "\n",
                "             case STRING_ARG:\n",
                "             case INT_ARG:\n",
                "-                no = (int)cmd->data - 1;\n",
                "+                no = *((int*)(&cmd->data)) - 1;\n",
                "                 if (no < (int)argValues.size())\n",
                "                     s += argValues[no]->format(cmd);\n",
                "                 break;\n",
                "--- main.cpp\n",
                "+++ main.cpp\n",
                "@@ -61,13 +61,9 @@ static void loadResources(const std::wstring &selfPath)\n",
                " #ifdef WIN32\n",
                "     dirs.push_back(getStorage()->get(L\"path\", L\"\") + L\"\\\\res\");\n",
                " #else\n",
                "-#ifdef __APPLE__\n",
                "-    dirs.push_back(getResourcesPath(selfPath));\n",
                "-#else\n",
                "     dirs.push_back(PREFIX L\"/share/einstein/res\");\n",
                "     dirs.push_back(fromMbcs(getenv(\"HOME\")) + L\"/.einstein/res\");\n",
                " #endif\n",
                "-#endif\n",
                "     dirs.push_back(L\"res\");\n",
                "     dirs.push_back(L\".\");\n",
                "     resources = new ResourcesCollection(dirs);\n"
            ]
        }
    ],
    "install": [],
    "version": "2.0"
}